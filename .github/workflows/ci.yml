name: compilecheck

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build deps
        run: sudo apt-get update && sudo apt-get install -y ninja-build lua5.3 liblua5.3-dev

      - name: Configure (CMake)
        run: cmake -S . -B build -G Ninja -DPTX_BUILD_LUA=ON -DPTX_BUILD_TESTS=ON

      - name: Build all targets
        run: cmake --build build -j

      - name: Run C++ tests
        run: ctest --test-dir build --output-on-failure

      - name: Lua smoke test
        run: |
          lua -e "package.cpath='build/?.so;'..package.cpath; local p=assert(require('ptx')); local classes= p.list_classes and p.list_classes() or {}; print('Lua classes:', #classes)"

      - name: Python reflection smoke
        run: |
          python3 bindings/python/examples/reflection_demo.py || echo "(non-fatal) python demo returned non-zero"

      - name: Show reflection cache stats
        if: always()
        run: |
          if [ -f build/.ptx_reflect_cache.json ]; then echo '--- Cache File ---'; cat build/.ptx_reflect_cache.json | head -n 100; fi

      - name: Upload reflection cache artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: reflect-cache
            path: build/.ptx_reflect_cache.json
            if-no-files-found: ignore

  headers-only:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Umbrella header generation + compile
        run: |
          python3 scripts/GeneratePTXAll.py
          chmod +x scripts/HeaderCompile.sh
          scripts/HeaderCompile.sh

  lint-cmake:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: CMake configure (syntax check)
        run: cmake -S . -B build -Wdev -Werror=dev || true

  summary:
    runs-on: ubuntu-latest
    needs: [build-and-test, headers-only]
    steps:
      - name: Report
        run: echo "Build matrix complete. Tests + headers succeeded." 
